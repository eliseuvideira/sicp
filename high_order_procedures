#!/usr/bin/env bb

(defn cube [x]
  (* x x x))

(defn sum-integers [a b]
  (if (> a b)
    0
    (+ a (sum-integers (+ a 1) b))))

(defn sum-cubes [a b]
  (if (> a b)
    0
    (+ (cube a) (sum-cubes (+ a 1) b))))

(defn pi-sum [a b]
  (if (> a b)
    0
    (+ (/ 1.0 (* a (+ a 2)))
       (pi-sum (+ a 4) b))))

(def numbers (map #(Integer/parseInt %) *command-line-args*))

(run!
 (fn [[a b]] (println (sum-integers a b)))
 (partition 2 numbers))

(run!
 (fn [[a b]] (println (sum-cubes a b)))
 (partition 2 numbers))

(run!
 (fn [[a b]] (println (pi-sum a b)))
 (partition 2 numbers))

(defn sum [term a next b]
  (if (> a b)
    0
    (+ (term a) (sum term (next a) next b))))

(defn inc [x]
  (+ x 1))

(defn sum-cubes-2 [a b]
  (sum cube a inc b))

(run!
 (fn [[a b]] (println (sum-cubes-2 a b)))
 (partition 2 numbers))

(println (sum cube 1 inc 10))

(defn identity [x]
  x)

(defn sum-integers-2 [a b]
  (sum identity a inc b))

(run!
 (fn [[a b]] (println (sum-integers-2 a b)))
 (partition 2 numbers))

(println (sum-integers-2 1 10))

(defn pi-sum [a b]
  (defn pi-term [x]
    (/ 1.0 (* x (+ x 2))))
  (defn pi-next [x]
    (+ x 4))
  (sum pi-term a pi-next b))

(println (* 8 (pi-sum 1 1000)))
