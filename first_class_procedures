#!/usr/bin/env bb

(defn abs [x]
  (if (< x 0)
    (- x)
    x))

(def tolerance 0.00001)

(defn fixed-point [f first-guess]
  (defn close-enough? [v1 v2]
    (< (abs (- v1 v2)) tolerance))
  (defn try-guess [guess]
    (let [next (f guess)]
      (if (close-enough? guess next)
        next
        (try-guess next))))
  (try-guess first-guess))

(def dx 0.00001)

(defn deriv [g]
  (fn [x]
    (/ (- (g (+ x dx)) (g x))
       dx)))

(defn newton-transform [g]
  (fn [x]
    (- x (/ (g x) ((deriv g) x)))))

(defn fixed-point-of-transform [g transform guess]
  (fixed-point (transform g) guess))

(defn average-damp [f]
  (fn [x]
    (/ (+ x (f x)) 2)))

(defn sqrt-1 [x]
  (fixed-point-of-transform
   (fn [y] (/ x y))
   average-damp
   1.0))

(defn square [x]
  (* x x))

(defn sqrt-2 [x]
  (fixed-point-of-transform
   (fn [y] (- (square y) x))
   newton-transform
   1.0))

(println (sqrt-1 9))
(println (sqrt-1 81))
(println (sqrt-1 100))
(println (sqrt-1 10000))
(println (sqrt-1 103041))

(println (sqrt-2 9))
(println (sqrt-2 81))
(println (sqrt-2 100))
(println (sqrt-2 10000))
(println (sqrt-2 103041))
