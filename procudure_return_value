#!/usr/bin/env bb

(defn avg [x y]
  (/ (+ x y) 2.0))

(defn average-dump [f]
  (fn [x]
    (avg x (f x))))

(defn square [x]
  (* x x))

(println ((average-dump square) 10))

(defn abs [x]
  (if (< x 0)
    (- x)
    x))

(def tolerance 0.00001)

(defn fixed-point [f first-guess]
  (defn close-enough? [v1 v2]
    (< (abs (- v1 v2)) tolerance))
  (defn try-guess [guess]
    (let [next (f guess)]
      (if (close-enough? guess next)
        next
        (try-guess next))))
  (try-guess first-guess))

(defn sqrt [x]
  (fixed-point (average-dump (fn [y] (/ x y))) 1.0))

(println (sqrt 9))
(println (sqrt 81))
(println (sqrt 100))
(println (sqrt 10000))

(defn cube-root [x]
  (fixed-point (average-dump (fn [y] (/ x (square y)))) 1.0))

(println (cube-root 9))
(println (cube-root 64))
(println (cube-root 27))
(println (cube-root 1000))
