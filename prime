#!/usr/bin/env bb

(defn divides? [a b]
  (= (rem b a) 0))

(defn square [x]
  (* x x))

(defn find-divisor [n test-divisor]
  (cond (> (square test-divisor) n) n
        (divides? test-divisor n) test-divisor
        :else (find-divisor n (+ test-divisor 1))))

(defn smallest-divisor [n]
  (find-divisor n 2))

(defn prime? [n]
  (= n (smallest-divisor n)))

(def numbers (map #(Integer/parseInt %) *command-line-args*))

(run! println (map prime? numbers))

; T(n) = Θ(√n)
